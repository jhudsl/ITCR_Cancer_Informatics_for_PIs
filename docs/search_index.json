[["index.html", "Informatics Technology for Cancer Research (ITCR): Cancer Informatics for PIs About this Course", " Informatics Technology for Cancer Research (ITCR): Cancer Informatics for PIs Carrie Wright 2021-03-19 About this Course This course is part of a series of courses for the Informatics Technology for Cancer Research (ITCR) called the Informatics Technology for Cancer Research Education Resource. This material was created by the ITCR Training Network (ITN) which is a collaborative effort of researchers around the United States to support cancer informatics and data science training through resources, technology, and events. Our courses feature tools developed by ITCR Investigators and make it easier for principal investigators, scientists, and analysts to integrate cancer informatics into their workflows. Please see our website at www.itcrtraining.org for more information. "],["introduction.html", "Chapter 1 Introduction 1.1 Motivation", " Chapter 1 Introduction 1.1 Motivation This course will cover the key cancer informatics topics principal investigators (PI) and other research leaders need to know when running a lab. Target Audience: The course is intended for PIs and other lab leaders who want to learn how to transition their labs to using cancer informatics tools, for those who rely on cancer informatics but for whom it is not a core competency, as well as, PIs for whom informatics is a key part of their research. Curriculum: This course will feature a range of ITCR tools from the very general (Galaxy, Bioconductor) to those that are very application specific (CRAVAT10, CIVIC13) but tools will only be featured at a conceptual level, rather than through hands on engagement in workflows. For more in-depth information about particular tools, see our other courses at our website: www.itcrtraining.org. The curriculum will also cover the roles and responsibilities of a lab leader in collaborative, mentor, or employer relationships with informatics experts. It will cover budgeting for cancer informatics locally or on the cloud, as well as key responsibilities for research leaders in data security, privacy, management and reproducibility. "],["cancer-informatics-for-research-leaders.html", "Chapter 2 Cancer Informatics for Research Leaders 2.1 Guidelines for working with informatics experts 2.2 Collaborating with Informatics Experts 2.3 Employing informatics experts 2.4 Mentoring informatics students", " Chapter 2 Cancer Informatics for Research Leaders Informatics research often requires multidisciplinary teams. This requires more flexibility to communicate with team members with distinct backgrounds. Furthermore, team members often have different research and career goals. This can present unique challenges in making sure that everyone is on the same page and cohesively working together. This course aims to provide research leaders with guidance about: How to effectively lead team members on informatics projects How to perform informatics projects well We will provide you with an awareness for the specific challenges that your informatics collaborators, employees, and mentees might face, as well as ways to mitigate these challenges. By creating a better work environment for your informatics research team, you will ultimately improve the potential impact of your work. We will also discuss the major pitfalls of informatics research and discuss best practices for performing informatics research correctly and well, so that you can get the most out of your informatics projects. 2.1 Guidelines for working with informatics experts In order to familiarize you with guidelines for how to make the most out of your informatics projects we are going to introduce you to some characters of the type of people you may encounter on your journey. First our fearless lab leaders who lead informatics research projects. We have Sally who is experienced with working with team members from many disciplines including informatics experts. She helps guide her lab through successful projects all the time. Next, we have Charlie. He is new to informatics research and could learn a bit about how to work with informatics experts more effectively. Now we have our informaticists. First is Jack, who is often forgotten by his lab leader. We also have Hilda, an example of a happy informaticist. She feels supported in all the ways that she needs, allowing her to be as productive and helpful as possible. Here is Francis the frustrated collaborator. Finally we have Harry, the helpful collaborator. We will now describe some guidelines for how to be an effective leader, collaborator and mentor on informatics projects so that you can be more like Sally with mentees and employees like Hilda and collaborators like Harry. 2.1.1 Finding and creating good relationships for informatics projects The first step to performing a good research study is to find the right people for your research team. We suggest that you look out for collaborators before you even design your studies. If you are new to informatics and you plan to employ or mentor informatics experts in your lab, we suggest that you seek help from an informatics expert before you start an informatics project. This section is based on a blog post from Roger Peng of the simply statistics blog which has many other useful discussions and resources. In this section we will provide a guide for finding good coworkers, whether they are mentees, collaborators, or employees, to work on informatics cancer projects particularly for multidisciplinary teams. Look for people who are easy to communicate with. Especially for projects with multidisciplinary teams, good communication is vital. Look for people who are easy to talk to. This can vary by your unique personality traits, but in general we suggest that you look for people who are: compassionate/polite explain clearly seem open and enthusiastic to learn new things respect your knowledge appear to get things done (based on their CV and or reputation) In Roger’s words: “If you dont feel comfortable asking (stupid) questions, pointing out problems, or making suggestions, then chances are the science will not be as good as it could be.” Take your time It is not always obvious who you feel most comfortable working with until you encounter an issue. In the case of finding a collaborator, take the time to get to know people at seminars and workshops. Chat with people casually about your work. For emplyees and mentees, allow time to get comfortable talking to one another. Given the power dynamic, it is important to openly express areas that are new to you and communicate respect for their knowledge. In all cases (with collaborators, employees, and mentees), build in extra time for projects to allow for teaching time. You can teach them about your domain and they can teach you about theirs. This may feel like it is taking extra time but it will ultimately pay off in the end, as you will better be able to work as a team to ask the most useful and testable hypotheses. Schedule extra time As a project continues, new challenges will arise that will again require more time for teaching one another about the scientific process specific to your domain. Build in breathing room in the project schedule where possible, to allow for time for setbacks. Keep in mind that you may be unaware of the setbacks that you may encounter for work outside of your expertise. Creating a situation that is less stressful makes it easier for everyone to maintain positive relationships. 2.1.2 Identifying good informatics questions Once you have identified your research team, your next step is to start thinking more deeply about the specific informatics questions you would like to evaluate. Be sure to include team members of each discipline in these discussions. There are many important considerations to keep in mind when asking an informatics question: Is it testable experimentally and statistically speaking? Is it feasible (in terms of cost, time, resources - such as data storage)? Does public data already exist? Are we using the appropriate methods (experimentally and statistically)? Are we considering confounders, biases, controls etc.? What will this mean for science and my lab members if this succeeds? What will this mean for my lab members if this fails? Is there a back-up plan? We suggests the following steps to take a great scientific question and make into a great statistically testable question. 2.1.2.1 Steps for forming questions Start with what you know and determine what is unknown Clarify what is most important to learn about what is unknown. What key information would lead to more understanding? What would be most helpful to know to lead to a new treatment or prevention strategy? What would lead to more questions? Narrow down what is unknown into specific statements based on what you identified as important to know from step 2. Write the unknown statements into specific questions. (Look out for vague phrases!) Make the questions into actionable tests by thinking about what would be measured or observed and ultimately what your variables would be in a statistical test. Make a mock-up of what the data would look like. (Do you have any necessary controls?) Evaluate if that actionable test can be assessed with statistical methods and if you have access or can collect the necessary data. Rework as necessary, possibly returning to a different question from step 5. Think about possible biases or confounders. Evaluate if the interpretation of the test would provide the insights that you are interested in. For example, say we were interested in identify new diagnostic biomarkers for colerectal cancer. Note: this is only an illustrative example. 2.1.2.2 STEP 1 First we would identify what is known and unknown: Several potential blood-based biomarkers have been identified, however many are lacking evidence due to the previous studies having small sample sizes. [source] You might ask how useful are these biomarkers for diagnosing colorectal cancer? So now we think about what is unknown: You know the sizes of the previous samples that have assessed these biomarkers and you know the level of sensitivity reported by previous reports. However, it is unknown how sensitive and specific some of these biomarkers are with sufficient sample sizes. It is unknown how collectively these biomarkers help to identify patients with cancer. It is unknown which biomarkers are more important. It is unknown which biomarkers or combinations are particularly useful for determining disease progression or what treatment options might be best. 2.1.2.3 STEP 2 p Step 2 then involves determining which unknowns are the most important to you. This could be what is more translatable to aiding better diagnostics in a noninvasive way. This could be to better understand cancer progression and what these biomarkers tell us about patient prognosis. Determine what unknowns best fit your interest/expertise. Let’s say that we want to know what is most translatable to aiding diagnostic tests now. 2.1.2.4 STEP 3 Step 3 then involves writing out specific statements for what is unknown related to making these biomarkers more useful for tests now. It is unknown how useful many of these biomarkers are individually for the diagnosis of colerectal cancer in larger samples. It is unknown if combining these biomarkers together is useful in diagnosis colerectal cancer. It is unknown if combining these blood-based screens with other screens is useful. You can probably imagine many more statements but we will keep this example simple. 2.1.2.5 STEP 4 Step 4 involves transforming these into questions: How useful are these biomarkers for the diagnosis of coleretal cancer? How useful is the combination of these biomarkers for the diagnosis of colerectal cancer? How useful is the combination of any of these biomarkers with other non-blood-based screens? Look for terms of phrases that our vague in your questions and make them more specific. For simplicity purposes we will stick with only the second question. The phrase “How useful” can be more specific. Does a combination of the detection of these biomarkers improve diagnostic sensitivity for colerectal cancer than single biomarkers alone? Ok that’s getting better! 2.1.2.6 STEP 5 Step 5 is to transform questions into actionable tests. For a question to be testable it must meet several requirements. We need to have variables that can be measured or observed. We need to have a variable we can modify or control and we need to figure out what we cannot control. Now what are our variables, what can we control or observe? We will be observing diagnostic rates of colerectal cancer and biomarker expression, and we can modify or control how many biomarkers we choose to focus on to compare samples. This leads to many questions: Should we compare one biomarker vs all of the biomarkers? Which single biomarker will we choose to compare to or will we look at all of them? Do we have the sample sizes to allow for the statistical power for so many tests? How will we look at the combination of biomarkers? A total score? Will it be additive or something more complicated? For example we could prioritize some biomarkers over others. These are good questions to ask an informatics expert about. However we are getting to a more testable question. Now let’s really think about what the data we would need and what it would look like. Which brings us to step 6 where we create a mock-up of the data. 2.1.2.7 STEP 6 Creating a mock-up of the data can make you ask yourself more questions about what you are asking and what you need to ask that question. Would it be that we have blood results for these biomarkers for patients where we know based on surgical pathology if they have cancer? What would these blood results look like? Would it be absolute expression levels of mRNA or protein? Do we have a threshold of elevated expression that we can use? Will we assign samples as yes or no in terms of meeting this threshold or will we use an absolute quantity or relative percentage over this threshold? Actually creating a mock-up of what the data might look like can reveal other important aspects that you may not yet have thought about. Thus here is the result of step 6. mock-up example of data 2.1.2.8 STEP 7 Step 7 is then to think about what statistical tests you might perform. Could we use a t-test to compare the scores among the patient groups? Would we want to account for other factors like the patients age or gender? Would another test be better? 2.1.2.9 STEP 8 Step 8 is then to think about what this would mean. What would it mean if our results showed a difference in score between the groups? What can we interpret? Do we want to be able to predict patient status? This may involve moving back a step or two. Remember that working with your research teammates can help you to come up with a better research plan before you start collecting data. By involving experts from different domains you can make the most out of your research efforts. We would also suggest that you work with your informatics experts to come up with a biological research question or set of questions and a more technical question for each project. This can be a good strategy to ensure that everyone in your team gets authorship and that your team is being as productive as possible. For this example, your informatics employees or students might write a paper using simulated data or publicly available data to look at methods for creating biomarkers scores. Their studies could better inform you about how to think about testing the utility of colerectal biomarkers for diagnosis purposes. 2.1.3 Starting a project Communication is vital for all good work relationships, but especially in a multidisciplinary team. Here are a few tips for keeping communication smooth regardless of if you are an informatics expert yourself or you are employing, mentoring, or collaborating with an informatics expert as you get started on a new project. Talk first Start talking to your collaborators, students, or employees before you even begin a project, so that you can plan the project in the optimal way. This is especially critical for forming the right statistically testable and scientifically useful questions and for collecting the right data to address such questions. Collecting the right data can be vital to the success of a project. It may not always be obvious what is possible for the experimental biologists to create samples. Is 30 samples actually feasible? How about 300? Would that be performed in different batches? What is necessary or possible for an informatics project to be able to test certain questions with statistical methods? How long would certain analyses take? These are discussions that should happen long before regents are purchased, before IRB submissions, and before grant submissions if possible. Come up with questions/hypotheses together Not knowing what may be feasible in terms of data collection and analysis can make it nearly impossible to form an appropriately testable hypothesis. Furthermore, it may be difficult to know how your questions fit into the context of a field and what is actually useful to advance treatment and prevention if you are not a domain expert of the cancer or disease that you are studying. By working together in multidisciplinary teams we can determine the best hypotheses to advance science. Domain experts can help to ensure that the question is feasible from a standpoint of data collection, that it leads to other important questions, that it is new, that it is useful, and that the plan to test it will actually lead to interpretations that are useful. Informatics experts can help to ensure that the question is feasible from as standpoint of data collection and data analysis, that a question is testable, and that it leads to the interpretations that the domain experts hope to gain. See the next section about forming good informatics questions. Be specific Give and ask for specific feedback. If your collaborator/employee/student says something that you do not quite understand, ask them for more specific clarification. In addition, give feedback that is specific where possible without assuming knowledge that might be necessary and avoid jargon. For example, if the number of samples would be underpowered for a specific statistical method, simply stating this is not enough. State that you believe that the sample size is too small to allow for specific statistical text XYZ to be utilized. Be compassionate Consider the stage of the project and how your discussions may impact your coworker. For example, pointing out that there is not enough data to do what your collaborator had hoped during later stages of the project can be very disappointing as it is often not possible to collect new data. Being polite and considerate when you make suggestions can make a major difference. Furthermore, suggesting an idea about how the project can still be productive can save your collaborator/coworkers/students stress and heartache. They may not be aware that there is public data available that can still save the project. Keep organized records of communication Keep a record of your communications. Organizing your emails for projects into a separate folders with easily recognizable titles can save you hassle later when something comes into question. Keep organized records of work Besides recording communications, record and communicate notes about your data collection and analyses. Be mindful of overwhelming your coworkers of course, but generally speaking provide extra information where possible. The more people aware of details about what samples where in what batch, the more likely important details are not missed or forgotten. For example if you are sending data to a collaborator send as much information as possible about how it was generated in the email in which you send it to them, even if you have already discussed the data. This can help ensure that no important details fall through the cracks. The best way we think you can do this in general is to use reports - our next suggestion. Use reports Instead of sending informal short emails (which are useful at some points in a workflow), we suggest intermittently sending lab reports with as much information about what was done and why as possible. For informatics related work in R or Python (or other supported languages) we highly suggest using R markdown or jypter notebooks to track what informatics steps you have performed and why. Beginning these reports with a short description of what the data was that you used and when you received it can be critical for ensuring that you are using the correct data! We will describe more about how to use such reports in the data management section of the course. Keep contact Regular communication continues the momentum of a project and ensures that important details get discussed when necessary. It also relieves anxiety among coworkers by keeping everyone aware of the status of the project and helping to start discussions if someone needs help. AVOCADO create graphic and add references from Jeff 2.1.4 Good informatics leader practices The section is based on a famous blog post written in 2013 called “The lonely bioinformatician” that describes the angst that informatics personnel often feel when they are the only person in thier lab with their skill set. The blog post author, Professor Mick Watson at the University of Edinburgh, describes these individuals as “pet bioinformaticians” in his blog called opiniomics. He states: “it is possible they [the pet bioinformaticians] will become isolated and pick up bad practices as they don’t have a senior bioinformatician to guide them. It also concerns me that their career and profesional development might suffer.” He also acknowledges the challenges of the opposite case: “Consider the opposite situation – how many bioinformatician PIs manage lab staff? How could we possibly guide a young post doc on how to run gels, PCRs etc nevermind more complicated laboratory SOPs?” He has since then stated for the PIs of experts who do not share the same skill-sets: “Just look after them, and recognise you can’t give them everything that they need.You can give them a lot, just not everything.” “Secondly, there is nothing wrong with being a pet bioinformatician – it can be a really stimulating role, and opens your eyes to lab-based science. I am not criticizing the pets either, I just urge you to look after yourselves.” And ultimately provides a guide for the “pet bioinformaticians” that can be useful for both informatics expert employees and also for leaders of such individuals as well as for informatics lab leaders who employ lab-based scientists. Extending the major themes from his guide and from his post about clinical labs here are guidelines for lab leaders: Avoid employee isolation If possible, employ more than one informatics expert or at least collaborate heavily with others - especially those with experience working with human data. Alternatively hire a more senior expert (with expertise studying in the domain you intend) with a higher salary. In Mick Watson’s words: “I am aware of a few lone bioinformaticians working in clinical labs. I want to make this clear – this is a bad idea. In fact, it’s a terrible idea. Through no fault of their own, these guys will make mistakes. Those mistakes may have dire consequences if the data are then used to inform a treatment plan or diagnosis.” In any case, we highly encourage guideline #2 regardless of what option you choose. Encourage relationships with others in their domain Enable and encourage your employee to cultivate relationships with others who have similar skill-sets at your institution or local community. If there is no local group of such individuals, see if your employee would be interested in starting one - such as a seminar group or journal club. Also encourage them to join online forums and attend conferences and workshops. AVOCADO Examples?? - Seems like the ITCR community could be very helpful and should be listed - but also probably smaller cancer specific forums? Encourage growth outside their domain On the other hand, it is important that you also cultivate and encourage your employee’s growth in your domain by again suggesting and enabling their participation in conferences and journal clubs on topics relevant to your lab. Value their perspective about science in general Encourage feedback and discussion from all of your employees in scientific discussions. Make their input feel welcomed regardless of the topic. A fresh perspective can sometimes lead to really important insights about things that are taken for granted by experts. Discuss expectations and hypotheses If your employee is helping with work for a grant, provide the proposal to them. Have a discussion with your employee about your expectations and how feasible they are, as well as to make your informatics hypotheses specific. Avoid projects where the informatics goals are vague. Also remember that many informatics tasks may take more time than you anticipate and your employee may have a better sense of how long something will take. (or vice verse if you are an informatics expert employing lab scientists). Be clear with your employee in these discussions that you are unclear about how long tasks will take, if that is indeed the case. Continue to have open dialogue about expectations and goals as the work proceeds. Advocate authorship and idea generation for all Regardless of your emloyees’ or students’ backgrounds, make sure you advocate for authorship for each of them (particularly if they are interested in a career in research). Informatics experts will also need first author papers. Allow your employees to generate ideas for such publications and discuss this with them. Often the work to help with other projects may not be as interesting for your employee as an idea that they come up with themselves. Often you can create one technical paper and one biological paper from each project. If nothing else, even if your employee is very busy on work for mid-level authorship, give them time to write a review or a software paper for a simple package, or a comparison of informatics methods. Mick Watson suggests making sure that your employees are authoring ~2 first author publications a year if possible. If necessary you can front-load collaboration work and then give your employee more time later to spend on their own work, but be careful about not protecting some of their time for their own career advancement. Also please see the Career Paths for Informatics Mentees section (coming up soon) and read it with your employees in mind, as well. Check on them! Most importantly, make sure that your employee is getting help and feedback from other informatics experts. It can be easy for your employee to get stuck or go in the wrong direction if left in isolation. How can you do this? Keep tabs on what they are doing in general, if they are still working on the same issue for an extensive amount of time, suggest that they seek help. Also by encouraging the relationships with other informatics experts you will provide them with the opportunity to ask others for their thoughts. Get external review of work Particularly in informatics, we can especially track our steps. Make sure that your employees are keeping detailed records about their work and then get them to regularly ask for feedback from others. We all make mistakes, it’s good to get external feedback early and often to ensure that the work is correct. AVOCADO will make graphic of this AVOCADO… where to put this: Need to add “deep work” and the value of uninterrupted time for an analyst 2.1.5 Informatics project pitfalls One common misconception is that informatics research projects work out more often or are faster than wet bench experimental research projects. This is however not necessarily true and informatics projects are just as likely to fail and often take more time than one might expect. However, one advantage of having an informatics team member on a project is that there is ample free data available to add to or shift or reframe a study if necessary. This is important to keep in mind when advising your mentees and guiding the planning of their projects. Common reasons why an informatics project might fail: The goals were too vague (see the previous section about identifying good informatics questions) Sadly this happens quite often and it can easily lead informatics emloyees and mentees down the wrong path. The data is not of high enough quality or lacks consistency This may be do to a faulty method, methodological differences between lab personnel, expired reagents, temperature differences on data collection days, or aging of a machine over time etc. Some of these issues can be avoided or reduced, while others are unavoidable. Do not be quick to blame your experimental research team members if the data does not look like you expect. Some variation in data is just a part of life. There is not a strong enough signal in the data to detect the effect of interest with the current data/methods This is also a very common problem if you are not sure what the strength of the effect you are looking for might be (which is often the case in Biology). In this case you need more data or methods with greater granularity. The method of data collection becomes obsolete This may not make the project fail per se but can make publication difficult. Staying on top of what methods are currently being used can help to avoid this. The signal does not exist Sometimes our hypotheses are just wrong. AVOCADO -Add reference to the book We can mitigate some of these project weak points. (You may notice how some of these have been discussed previously.) However some of these are a bit unavoidable and it is best to have realistic expectations and flexibility about backup project ideas. Ways to mitigate project failure: Discuss with experts Discuss with trusted experts across all necessary domains about your informatics hypotheses to make sure they are feasible with the data you have or will generate before you get too far down the research path. Ask for their help to make sure that your scientific questions are not too vague. Do this as early as possible. Diversify projects It is a good idea to diversify your mentees’ and employees’ projects to enable them to have exposure to different projects, as well as more opportunities to contribute to a project that will ultimately result in a product such as an academic paper or a new software package. Safe project planning Make sure mentees and employees have at least one very solid project. For example, assign a review article, a simple software package, or a project with very promising pilot data. Co-authorship Allow lab members (especially mentees) to work together on projects. Assign one mentee or employee as the main personnel, but allow other team members to contribute in small ways to allow them to at least get co-authorship, just in case their main projects fail. Plan for ample time Plan for projects to have adequate time to account for setbacks. For example, if possible plan on the possibility that additional data may need to be collected or perhaps more data will need to be added from a data resource. It will take additional time to analyze the new data. Unfortunately, simply plugging in new data to an existing script hardly ever works. Instead the following tasks are required: Check the quality of the new data Reformat/wrangle the new data to match that of the existing data Evaluate how different the new data is from the old data - are they similar enough to be included in a larger analysis or does this require two analyses? Perform the analysis on the new data Adjust and reframe When a project appears to fail because the data turns out to not be adequate for answering your original question, reframe the project to answer a question that the data actually can answer. For example, if the goal of a project was to look for differential gene expression of a single gene and no significant difference is found, consider evaluating the gene expression of a pathway or network of genes that are involved in the same biological process. It is best to be transparent about your scientific process in your publications. Get new data In the worst case that the data does not appear to work for your initial goal and reframing the question does not seem possible, look for new data. Now there are many data resources available online. AVOCADO - we will list the link to the data table… We have curated a list of cancer research related data with the help of the National Cancer Insitute (NCI) Informatics Technology for Cancer Reserach (ITCR) faculty. examples: https://pubmed.ncbi.nlm.nih.gov/25691825/ https://www.cbioportal.org/ https://www.nature.com/scitable/topicpage/genomic-data-resources-challenges-and-promises-743721/ CGGA 2.1.6 Informatics lab management tools There are a few tools that can be especially useful for assisting with day-to-day management of projects involving informatics regardless of if you are simply collaborating with an informatics expert or you are leading an informatics research team. 2.1.6.1 Slack [source] Slack is a communication tool that allows you to communicate with lab members much more efficiently than email. It is a bit like a combination of an instant message system and email and dropbox. You can do quite well with the free version of slack. It may be all that your research group needs indefinitely. The major difference between the free version and the paid versions is that the free version does not save all of your message history. Currently, with the free version you can search through the history of the last 10,000 messages. From our experience using this with a department of about 250 people, it takes about a year to reach this. If there are any really important messages or files, make sure to save them just in case. 2.1.6.2 How to use slack? 2.1.6.2.1 Workspaces The main landing page for slack is called a workspace, which looks like this: In the above image, this person has 5 workspaces which are indicated by the squares on the far left. Each workspace allows for multiple channels for communicating. These channels can include all members of the workspace or specific subsets of members. Team members can also have separate direct messages to have one-on-one discussions. It’s a good idea to check if your department or institute is already using slack. If so, they may have a workspace that you can join. Otherwise you may want to think about recruiting your department or institute to start using slack. In this case you could start a workspace where people outside your research group can communicate. This would still allow you to have group messages with your lab or specific groups within the lab. Otherwise, you can start a workspace just for your research group. 2.1.6.2.2 Channels Channels are the main way in which you can converse with your team on slack. We recommend making a slack channel for your entire research group. Everyone in your group will be able to discuss something by sending messages in real time. If someone is not available at that time, they will see the message when they next check slack. We also recommend making project specific channels. For these channels you can add all of the team members working on a specific project, so that they can easily discuss and review discussions about the project. Importantly, you can make channels private or public. If a channel is public, anyone in the workspace can join. channels 2.1.6.3 Features 2.1.6.3.1 Pins If someone sends a really important message, like a link to a relevant document, you can “pin” the message so that it is easier to find later. Hovering over a message you will get the following options: Clicking on the 3 dot button allows you to do several useful things for a message including pinning it to find it easily later. Pin it for later! 2.1.6.3.2 Code One great feature about slack, is that it is very convenient to message about code. You can also attach files directly to messages just like in the above message which has a screen shot image file. 2.1.6.3.3 Reminders If you want to be reminded about a message in 20 minutes or next week you can also do that using the same hovering and 3 dot button option. You may also notice in the image above that your messages can be edited! unlike an email. 2.1.6.3.4 Polls One other nice feature for working with a team is that you can directly poll your team. Quickly perform polls 2.1.6.4 Git and GitHub We will learn more about these tools in the Data Management portion of this course, however we will give a brief introduction now. Informatics work can especially benefit from keeping track of your steps and the code that you have used. In some cases your lab may use a tool like Galaxy which has built in options for keeping track of the steps that your lab members are taking during their research. However, other tools do not have this option. Instead, we can use a tool called Git which allows for something called “version control”. Version control is the tracking of changes to a file or files overtime. This is equivalent to saving different versions of a grant proposal overtime. However, as you may have noticed, this is not an easy process to maintain. Tools like Git (of which Git is one of the most popular) help us to keep track of changes. If we save our changes often, we can easily modify our files back to a recent version if necessary. This may be less useful for a grant proposal (although we would argue that it really can be!) but it can be absolutely critical for your informatics code. Why is this? Small changes in your code may result in your code breaking or generating completely different results. To make matters worse, sometimes your scripts may be lengthy, if you have 4,000 lines of code, it can be difficult to identify what is different between one version and another. Git really helps with this. AVOCADO add image So what is GitHub? GitHub is a free hosting site for code (or other files - including those grant proposals!). Therefore, all the different versions of your files can be saved and accessed online at GitHub. You can make these files private or public. According to Wikipedia: As of January 2020, GitHub reports having over 40 million users and more than 190 million repositories (including at least 28 million public repositories), making it the largest host of source code in the world. You do not have to use GitHub to use Git. If you have data that needs to be complaint with HIPPA, you could still use Git on a local server (more on this in coming). Alternatively, you could use GitHub after you de-identify your data. AVOCADO more on using github with sensitive data. https://github.com/truevault/hipaa-compliance-developers-guide HIPPA compliancy group https://compliancy-group.com/large-scale-hipaa-security-breach-improper-use-of-github/ reproducibility… (several options here…) GitHub/Git https://r-bio.github.io/intro-git-rstudio/ https://thenewstack.io/dont-mess-with-the-master-working-with-branches-in-git-and-github/ 2.1.6.5 AVOCADO Docker??? for later with Figshare etc. 2.1.6.6 R Markdown /Jupyter 2.2 Collaborating with Informatics Experts Studies investigating biology research labs over history indicate that collaboration has been on the rise since the 1950s [1] and that the rate continues to increase [2]. Indeed the size of biology research teams appear to have doubled from 1955 to 1990 [1]. But why? 2.2.1 The benefits of collaboration Shared cost - Research often involves expensive technology, thus it is cost effective to share resources. Shared expertise - Now that technology affords answering in some cases more complex or broader research questions, it is often more effective to employ multiple contributors with different knowledge, skills, and perspectives. Researchers have noted that their own concept of their field changed as a result of working with investigators from other disciplines. Thus this can lead to innovation [3]. Shared burden - Doing part of the work for a project using the knowledge and skills that you are most comfortable with and seeking help from others who are more knowledgeable on other research aspects can be a more efficient strategy. Shared reliability - Including multiple team members who can each evaluate the research can improve the reliability of a project, as mistakes can be found by other members. Shared credibility - Collaborations involving experts of multiple areas can improve the perceived credibility of the work by others. 2.2.2 Potential Challenges There are always challenges when collaborating with others, but some of these are particularly enhanced in multi-disciplinary teams. Here are some challenges that you may encounter when a collaboration involves informatics experts. Good Collaboration: Bad collaboration: Communication Differences - Extra care needs to be taken to ensure that communication across groups is effective. Typically researchers will not meet as often with a collaborator as they would with an internal team member. Therefore, poor communication in a collaboration can lead to more costly misdirection and thus wasted time and effort. Furthermore, as investigators often have different backgrounds, differences in jargon and language can make communication more challenging. Having internal team members with some familiarity with informatics can be very beneficial for translating discussions with collaborators who are informatics experts. One solution to this is to have trainees work in both labs. This can be especially beneficial for the trainee who will become accustomed to two research styles and will learn a diverse set of skills, allowing them to potentially have their own multi-disciplinary lab in the future [3]. Another important method that can help resolve this issue is to have members provide educational seminars for participating members about the fundamentals of their work. Different research style and goals - Beyond differences in language, differences in research style and goals can lead to conflict. “Scholars’ different styles of thought, standards, research traditions, techniques, and languages can be difficult to translate across disciplinary domains.” [3] Making clear research standards and goals, as well as outlining clear specific tasks at the beginning of a project can help to avoid this issue. Furthermore, meeting consistently throughout the duration of a project can also help to make sure that standards are maintained. Additionally, these meetings should include discussions about intellectual property, authorship, leadership, and defining what success looks likes to each of the various members. Defining these details early can avoid major conflict later. Furthermore, it is critical to keep in mind the diversity of career goals of research team members, as junior team members may have a challenging time persuading others of their independence and contributions when they work on largely collaborative projects. It is also necessary to ensure that junior members have time to devote to their own research programs. [2] Support should be provided for these junior collaborators by more senior collaborators. Different capabilities - Research of multi-disciplinary collaborations has revealed that when collaborating members are unclear of how their expertise and work contributes to the project, they are less motivated and fell less valued. Working with members of different backgrounds to determine how their expertise can contribute to the project, as opposed to simply assigning them a task, will not only help with morale, but it can also better define how a collaborator can further contribute to a project in ways that you may not already expect [3]. Reduced sense of responsibility - Another concern of collaboration is that team members may feel less responsibility or commitment to a project than for a project within their own lab. Defining tasks and expected due dates can help reduce this issue. Discussions to establish due dates should always include team members with expertise in each area of science, as tasks may not take the amount of time that another researcher would expect. It is a common misconception that informatics tasks take less time than the tasks actually take in reality. Research is dynamic - Research always has an element of trial and error. Protocols may change and new scientific questions may emerge. Frequent meetings with all group members to understand the dynamics of the project are critical. Furthermore, flexibility and understanding is required. It should be expected that aspects about the project will change. Different levels of resources - Particularly when collaborating with community members, community colleges, and institutions that are “Equity-oriented” serving populations that have historically been marginalized or “minoritized” [4], it is important to keep in mind that large differences in resources may exist between collaborating members. Sharing and discussing budget information early and often can help research members to understand what expectations are reasonable and how collaboration partners may best assist one another. 2.2.3 References Vermeulen, Niki, John N. Parker, and Bart Penders. “Understanding Life Together: A Brief History of Collaboration in Biology.” Endeavour 37, no. 3 (September 2013): 162–71. https://doi.org/10.1016/j.endeavour.2013.03.001. Sonnenwald, Diane.“Scientific collaboration.” Annual Review Of Information Science And Technology. 41 (2007): 643-681. https://www.researchgate.net/publication/220040763_Scientific_collaboration. Mäkinen, Elina I., Eliza D. Evans, and Daniel A. McFarland. “The Patterning of Collaborative Behavior and Knowledge Culminations in Interdisciplinary Research Centers.” Minerva 58, no. 1 (March 2020): 71–95. https://doi.org/10.1007/s11024-019-09381-6. Blake, Daniel. “The Case for Rebranding Minority-serving Institutions.” DiverseEducation.com (January, 17, 2017) https://diverseeducation.com/article/91247/. 2.3 Employing informatics experts In contrast to collaborating with informatics experts, in some case it may be beneficial to directly employ them on your team. There are again pros and and cons for this strategy. By directly employing informatics experts, rather than collaborating with an expert, research leaders will have more access to meet with these experts more often. Research leaders may also have more sway in terms of guiding the direction of the experts’ work. Leaders can also potentially grow the informatics part of their research program more readily, leading to even more flexibility in the research questions that they may be able to assess. However, direct employment of informatics experts requires all of the typical responsibilities and costs of employing another lab member. It also requires the additional resource requirements for the informatics work of the particular expert. This will be discussed more in a later section of this course. In addition, it is useful to become familiar with best practices for ethics, reliability, and reproducibility in computational work. This requires some different tactics than that of experiment based research (often called “wet lab” research). Although it is also useful for informatics experts to keep track of the work that they have performed in general, similar to maintaining notes about experimental research with a lab notebook, a much deeper level of detail can be tracked and maintained for computational work. What we mean by this, is that the actual code and data used in their work can be saved over time. This can be invaluable for research reproducibility. Thus research leaders are advised to become familiar with best practices for data sharing and data management so that they can most effectively manage their informatics employees. This is also discussed in more detail later in the course. Furthermore, it is very important to avoid issues that can happen if you employee a single bioinformatician that will be isolated from other informatics experts. One other important thing to know is that informatics work is often best performed with long stretches of uninterrupted time to allow your informatics employees to perform “deep work”. This will also be true for your informatics mentees. Why is this? Some of the challenges that your informatics teammates will be working on will require a great deal of abstract thinking and troubleshooting. Such difficult work profits well from deep concentration. How can you accommodate this? Try to work with your informatics teammates when you schedule lab meetings and be mindful of other time commitments they might have, such as classes, seminars, or other meetings. 2.4 Mentoring informatics students Mentorship is a particularly unique relational experience. While traditional mentorship has been defined by the hierarchical structure of a single mentor who teaches subordinate mentees, new styles have emerged that are not as constrained or limited as the traditional paradigm. At its optimum, mentors and mentees should learn from each other and together and expand what each can do alone. Importantly the more traditional paradigm that does not value “reciprocal learning” as highly, has been shown to be less effective for a larger diversity of students.[1] For research groups that are newer to informatics, some of these less traditional paradigms may be especially useful, we will focus on a few here. Alternative Montorship [source] 2.4.1 Co-mentoring/Collaborative/team mentoring As we described earlier, co-mentoring or collaborative mentoring of students by multiple mentors with different backgrounds can be particularly beneficial to the student and also to the partnering labs. In the case of collaborative mentoring where a mentee is mentored by two research experts in two different labs, this provides an opportunity not only to strengthen a collaboration, but also for students to gain more diverse knowledge, and to in turn provide more of the expertise that they gain back to both labs. Co-mentoring could also occur within the same lab by a research leader and an informatics expert. This could also work well in a multilevel paradigm, where an informatics expert may guide informatics related aspects of research, while an overarching research adviser may guide the student’s overall research mentorship experience. 2.4.2 Peer mentoring Peer mentoring also provides great opportunities to expand students’ expertise and skills without as much time constraints for the research leaders of a lab, particularly for skills that may be new to lab leadership. Furthermore, such paradigms are helpful for improving students’ teaching skills, collaboration skills, self-reliance, and self-confidence. Teaching a peer is often useful for students to identify gaps in their own knowledge, and assisting in their quest to “learn how to learn” [1]. Furthermore, such paradigms appear to be especially beneficial to students of historically marginalized populations.[1] However, there are challenges for research leaders from a management standpoint. Mentors should be mindful of any conflicts that may arise between students. These can often be avoided with clear and distinct goals and projects for students, to avoid making students feel like they are competing with one another. Additionally, we highly recommend establishing a code of conduct for the lab, so that students and staff members are clear about what behavior is expected. 2.4.3 Electronic mentoring With the COVID-19 pandemic, the transition to using electronic means of contact with students and staff for research has expanded on an unprecedented scale. It is unclear currently how much this will continue in the future. However, research prior to the pandemic has shown some surprising benefits of providing mentorship through electronic means. Importantly it appears that this eases burdens for students who are balancing course work, as it often provides more scheduling flexibility. Additionally, such mentorship is particularly helpful for historically marginalized populations who may face more hostility by going to research institutes with face-to-face interaction with others or may have additional scheduling conflicts. Even as we may return to more on-site research labs, additional availability by mentors with mentees using electronic means of contact are likely to be beneficial. Technology such as slack can be especially useful for allowing lab members to interact with one another. We will cover more about this soon. 2.4.4 Career goals The job landscape for scientists has changed in recent decades with more opportunities outside academia in industry and government. Furthermore career goals for informatics mentees can be very different than that of other research mentees. By having informatics expertise, these trainees have additional career opportunities. Becoming aware of these opportunities yourself, as a research leader, is therefore critical for cultivating your mentees’ awareness of the diversity of opportunities available to them. This will ultimately allow your mentees to choose the career path that suites them best. 2.4.4.1 Career Paths for Informatics Mentees Academia - Your informatics mentees may have career opportunities as principal investigators, scientists, or educators just like other cancer biology mentees. In addition to opportunities as educators for informatics and biology, they will also have opportunities for data science. Government - Your informatics mentees will may have career opportunities as scientist or policy maker for research institutes just like other cancer biology mentees. However, additional agencies and institutes may have a need for their data science skills on topics outside of biology. For example your mentee may have the skills to work for a city police department. Industry - Beyond the potential career options in the pharmaceutical industry, biotech, and medicine, your informatics mentees will have data science skills that may qualify them for jobs in a variety of industries. For example your informatics mentees could find jobs at companies such as Stitch Fix or Ancestry which use methods in machine learning and bioinformatics for their products. Additionally, your mentee may also have opportunities to join a software company as a computer programmer or even as a programming educator at a company like RStudio. Nonprofit - Beyond research and management positions at nonprofits performing scientific or clinical research, informatics mentees may have opportunities at other nonprofits with other types of goals. For example, your mentee might find work at a nonprofit that advocates for civil rights and investigates social interactions in social media platforms. According to Brandon Rohrer, a data scientists who formerly worked at Facebook and now works at iRobot, there are 4 major categories of knowledge and skills for data science: Data Analysis - domain knowledge, research skills, and interpretation skills Data Modeling - machine learning application skills, algorithm development skills Data Engineering - data management skills, skills to make code production-level ready (ex. automation), software engineering Data Mechanics - data formatting and cleaning, data handling (filtering, subsetting) Archetypes of data scientists: Beginner data scientists - exposure in each of the 4 areas - ideally how your mentee will be after training at a minimum if their goal is to pursue a data science career Generalist - proficient in all areas - data science manager or executive - good for mentees who wish to stay in research! Specialists Detective - strong in data analysis and mechanics and exposure in all 4 areas Oracle - strong in modeling and mechanics (great for machine learning companies) Maker - strong in mechanics and engineering Markua way1 {type: video, poster: “http://img.youtube.com/vi/VOCYL-FNbr0/mqdefault.jpg”} Markdown way Markua way2 Introducing Markua AVOCADO - add more about this https://www.manning.com/books/build-a-career-in-data-science Major skill sets to focus on according to the “Build a Career in Data Science” book by Emily Robinson and Jacqueline Nolis: 1) statistics 2) Machine learning 3) programming (python and R) 4) projects - hands on experience https://blogs.oracle.com/datascience/how-to-survive-your-data-science-interview \" When looking for jobs.. ignore job titles, dont pay too much attention to specific tools or languages…pay attention to the skills that are being asked for\" 2.4.4.2 Authorship Considerations There are also additional types of papers that your informatics mentee can publish, including: Data resource papers, where your mentee may publish an article introducing a data resource Software papers - an article where the functionality and development of piece of software is discussed When guiding your mentee through the publication process, it is a good idea to keep in mind their career goals as you priortize different paper ideas. For example a mentee that is interested in pursuing a data engineering career may benefit more from a Software paper than other mentees. 2.4.5 Mentoring underrepresented students The inclusion of diverse populations in scientific teams has been shown to improve innovation [2]. Scholars from underrepresented groups have origins, concerns, and experiences that differ from groups traditionally represented, and their inclusion in academe diversifies scholarly perspectives. In fact, historically underrepresented groups often draw relations between ideas and concepts that have been traditionally missed or ignored [2]. However, analyses of scientific article authorship indicate that women are underrepresented in computational biology [3] and biomedical engineering [4] and analyses of university faculty and students demonstrate that both women and historically marginalized populations (such as Black, Hispanic, and Native American) remain underrepresented in science, technology, engineering, and mathematics (STEM) fields in the US and in Europe[2],[5]. In order to best support and encourage mentees of underrepresented groups in cancer informatics, we suggest the following: Seek training about disparities in informatics and STEM career achievement and attitudes, biases, and stereotypes that are hindrances. Note that you may not be aware of the barriers of achievement that your mentees may face. For example, mentees from low socioeconomic backgrounds, mentees with disabilities, mentees who have immigrated, older mentees, mentees of traditionally underrepresented races and ethnic groups, and mentees with gender identities that are underrepresented face unique and overlapping challenges. It is also important to learn about how intersectionality (the idea that some individuals may represent more than one underrepresented group (ex. female and black)) results in more nuanced challenges. Become aware of stereotype threat - “an internal feeling and concern about confirming a negative stereotype associated with a group (e.g., racial, ethnic, gender, and age) with which the individual identifies”[6] and how they might influence your mentees. Also, become aware of as **microaggressions* - “subtle verbal and nonverbal slights, insults, or invalidating remarks directed at individuals due to their membership in a group (e.g., racial, ethnic, gender, sexual orientation, and physical disability), which are rooted in biases about individuals in that group”[6]. See here for a list of examples. Importantly, “mentors for students with disabilities should receive training, as needed, on their mentee’s specific disability and should be made aware of the accommodations that students may need to succeed in activities and courses” [6]. Appreciate and acknowledge mentee’s differences. Research shows that mentees of underrepresented racial groups would prefer their mentors to directly discuss their background differences and how to best cultivate the mentee’s career success given their background. An attitude of “color-blindness” about race has shown to hinder the success of mentees [7],[8]. However, singling out individuals for their differences is often felt as a microaggression. There are ways to discuss these topics with your student in private without singling them out in front of the rest of a group. “Racial/ethnic differences between mentees and mentors in interracial mentoring relationships can pose cultural barriers to effective mentoring of HU (Historically underrepresented) students and even affect students’ professional and psychosocial success, especially when complex racial/ethnic issues are not effectively handled or addressed…” [7] Two ideological perspectives – colorblindness and multiculturalism – have emerged to shed light on this question. Colorblindness downplays the salience and importance of race by focusing on the commonalities people share, such as one’s underlying humanity. In contrast, multiculturalism acknowledges and highlights racial differences [8]. “Exposure to colorblind (vs. multicultural) messages predicts negative outcomes among Whites such as greater implicit and explicit racial bias (Richeson &amp; Nussbaum, 2004)” [8] “Not only do minorities prefer multiculturalism (Ryan et al., 2007, Verkuyten, 2006), they benefit when others around them endorse multiculturalism (Plaut et al., 2009)”[8] Work to create a safe environment. Educate lab mentors about cultural sensitivity and microaggressions. Highlight the importance of collaboration and create a code of conduct for the lab. Role models make career goals seem possible. Expose all mentees to a diverse range of role models through seminars, journal clubs, and participation in conferences. Computational biology papers with female authors are more likely to have a last author is also female. It is unclear if this is because women are more likely to hire other women and or if females are more likely to choose a lab with a female adviser [3]. Indeed, research of females and other underrepresented groups in STEM including students with disabilities and of certain racial and ethnic groups suggests that role models of underrepresented populations are particularly important for recruiting and keeping students interested in fields where they may feel like an outsider [6]. One strategy to encourage students of underrepresented populations is to provide students with exposure to such role models through regular seminars where scientists who represent these populations are prominent [9]. Advocate for all mentees, particularly those from underrepresented groups by introducing your mentee to other scientists and trainees, encouraging the participation of your mentees in support programs and groups such as graduate student groups and helping mentees cultivate self advocacy practices through open discussions and encouragement. Support a healthy relationship with failure by being a good role model and openly discussing the role of failure in research. For example, you may describe failures in your own career or you may read some of the book Brilliant Blunders by Mario Livio with your mentees. This book describes how scientific advancement actually occurred due to mistakes of some of the most respected scientists. Educating mentees about the Growth Mindset described by Carol Dweck may also be helpful. The major themes of this mindset is an awareness that our abilities are not fixed, we can change our aptitudes with practice and work. Growth Mindset [source] Celebration and microaffirmations Be sure to celebrate all of your mentees’ small and large successes. This has been shown to promote confidence and resilience [6]. Give feedback with cultural sensitivity - It is important to be aware that your mentee may be struggling with feeling like they don’t belong when you provide feedback [6], [10]. In addition to creating a code of conduct for the lab, consider creating a document that outlines mentor and mentee expectations. See here for an example of such document [11] and see here for more information. Keep in mind that such forms should be tailored for different career stages of your mentees and for mentees who are pursuing different expertise. Informatics mentees should incorporate guidelines about data management practices. 2.4.6 Refrences Mullen, Carol A., and Cindy C. Klimaitis. “Defining Mentoring: A Literature Review of Issues, Types, and Applications.” Annals of the New York Academy of Sciences 1483, no. 1 (January 2021): 19–35. https://doi.org/10.1111/nyas.14176. Hofstra, Bas, Vivek V. Kulkarni, Sebastian Munoz-Najar Galvez, Bryan He, Dan Jurafsky, and Daniel A. McFarland. 2020. “The Diversity–Innovation Paradox in Science.” Proceedings of the National Academy of Sciences 117 (17): 9284–91. https://doi.org/10.1073/pnas.1915378117 Bonham, Kevin S., and Melanie I. Stefan. “Women Are Underrepresented in Computational Biology: An Analysis of the Scholarly Literature in Biology, Computer Science and Computational Biology.” Edited by Carl T. Bergstrom. PLOS Computational Biology 13, no. 10 (October 12, 2017): e1005134. https://doi.org/10.1371/journal.pcbi.1005134. Aguilar, Izath Nizeet, Venkateswaran Ganesh, Rachel Mannfeld, Riley Gorden, Jennifer M. Hatch, Shatoria Lunsford, Elizabeth C. Whipple, Randall T. Loder, and Melissa A. Kacena. 2019. “Authorship Trends Over the Past 30-Years in the Annals of Biomedical Engineering.” Annals of Biomedical Engineering 47 (5): 1171–80. https://doi.org/10.1007/s10439-019-02222-3. Chaudhary, V. Bala, and Asmeret Asefaw Berhe. 2020. “Ten Simple Rules for Building an Antiracist Lab.” Edited by Russell Schwartz. PLOS Computational Biology 16 (10): e1008210. https://doi.org/10.1371/journal.pcbi.1008210. Stelter, Rebecca L, Janis B Kupersmidt, and Kathryn N Stump. “Establishing Effective STEM Mentoring Relationships through Mentor Training.” Ann. N.Y. Acad. Sci., 1483 (2021): 224–243. https://doi.org/10.1111/nyas.14470 Byars-Winston, Angela, Patrice Leverett, Ross J Benbow, Christine Pfund, Nancy Thayer-Hart, and Janet Branchaw. “Race and Ethnicity in Biology Research Mentoring Relationships,” Journal of Diversity in Higher Education, 13, No. 3 (2020): 240–253. http://dx.doi.org/10.1037/dhe0000106 Holoien, Deborah Son, and J. Nicole Shelton. “You Deplete Me: The Cognitive Costs of Colorblindness on Ethnic Minorities.” Journal of Experimental Social Psychology 48 No. 2 (2012): 562–65. https://doi.org/10.1016/j.jesp.2011.09.010. Katz, Samantha. “Mentoring Women in the Biological Sciences: Is Informatics Leading the Pack?,” : BioScience, 57(7) (2007): 559. https://doi.org/10.1641/B570705. Lee, Adrian, Carina Dennis, and Philip Campbell. “Nature’s Guide for Mentors.” Nature 447, no. 7146 (June 2007): 791–97. https://doi.org/10.1038/447791a. Masters, Kristyn S, and Pamela K Kreeger. “Ten Simple Rules for Developing a Mentor–Mentee Expectations Document,” PLOS Computational Biology,3 No.9 (September 21, 2017): e1005709. https://doi.org/10.1371/journal.pcbi.1005709 "],["informatics-tools-for-cancer-research.html", "Chapter 3 Informatics tools for Cancer Research 3.1 Tools", " Chapter 3 Informatics tools for Cancer Research Biomedical research at large, and in particular cancer research, now involves massive amounts of data of a variety of types collected through rapidly advancing technologies. To allow current and future cancer researchers to fully take advantage of the opportunities afforded by these technologies, our mission is to make informatics tools as accessible as possible to all cancer researchers. From omics, to imaging, to clinical data, cancer researchers can now examine biospecimens, animal models, and clinical data with unprecedented depth and breadth. This course aims to provide an overview of tools available to cancer researchers to afford them more flexibility in their research. It will also provide guidance for best practices for performing informatics research. 3.1 Tools 3.1.1 Galaxy This section was written by Jeremy Goecks: Galaxy is a web-based computational workbench that connects analysis tools, biomedical datasets, computing resources, a graphical user interface, and a programmatic API (Figure 1). Galaxy (https://galaxyproject.org/) enables accessible, reproducible, and collaborative biomedical data science by anyone regardless of their informatics expertise. There are more than 8,000 analysis tools and 200 visualizations integrated into Galaxy that can be used to process a wide variety of biomedical datasets. This includes tools for analyzing genomic, transcriptomic (RNA-seq), proteomic, metabolomic, microbiome, and imaging datasets, tool suites for single-cell omics and machine learning, and thousands of more tools. Galaxy’s graphical user interface can be used with only a web browser, and there is a programmatic API for performing scripted and automated analyses with Galaxy. Galaxy is used daily by thousands of scientists across the world. A vibrant Galaxy community has deployed hundreds of Galaxy servers across the world, including more than 150 public and three large national/international servers in the United States, Europe, and Australia (https://usegalaxy.org, https://usegalaxy.eu, https://usegalaxy.org.au). The three national/international servers (Figure 2) have more than 250,000 registered users who execute &gt;500,000 analysis jobs each month. Galaxy has been cited more than 10,000 times with &gt;20% from papers related to cancer. The Galaxy Tool Shed (https://usegalaxy.org/toolshed) provides a central location where developers can upload tools and visualizations and users can search and install tools and visualizations into any Galaxy server. Galaxy has a large presence in the cancer research community. Galaxy serves as an integration and/or analysis platform for 7 projects in the NCI ITCR program. There is also increasing use of Galaxy in key NIH initiatives such as the NCI Cancer Moonshot Human Tumor Atlas Network (HTAN) and the NHGRI Data Commons, called the AnVIL (https://anvilproject.org/). Galaxy’s user interface, accessible via a web browser, provides access to all Galaxy functionality. The main Galaxy interface (Figure 3) has three panels: available tools (left), running analyses and viewing data (middle), and a full history of tools run and datasets generated (right). Datasets for analysis in Galaxy can be uploaded from a laptop or desktop computer or obtained from public data repositories connected to Galaxy. With Galaxy, complex workflows composed of tens or even hundreds of analysis tools can be created and run. In Galaxy’s workflow interface (Figure 4), tools can be added and connected via a simple drag-and-drop approach. Galaxy users can share all their work—analysis histories, workflows, and visualizations—via simple URLs that are available to specific colleagues or a link that anyone can access. Galaxy’s user interface is highly scalable. Tens, hundreds, or even thousands of datasets can be grouped into collections and run in parallel using individual tools or multi-tool workflows. In summary, Galaxy is a popular computational workbench with tools and features for a wide variety of data analyses, and it has broad usage in cancer data analysis. "],["computing-for-cancer-research.html", "Chapter 4 Computing for Cancer Research 4.1 Computing 4.2 Computing Platforms 4.3 Hardware 4.4 Choosing a Computing Platform 4.5 Local Costs 4.6 Cloud Costs", " Chapter 4 Computing for Cancer Research To afford you the best opportunity to perform the informatics research that you would like, it is useful to become familiar with computing options and costs. This course aims to provide research leaders with some guidance about making decisions for computing hardware (the physical parts of your computing platform) and software (the code that tells the computing platform how to function). It will also describe the benefits and drawbacks of local and “Cloud” computing, as well as the associated costs of each. Note: This content was adapted from content by Frederick Tan for the ANVil project. See his course created with Jeff Leek, Sarah Wheelan, and Kai Kammers here. 4.1 Computing First we would like to start off with some background about computers. This will better enable you to make decisions about what type of hardware and software you might need for your research. 4.1.1 Core Computing Components There are three core and important components of computers for computing: CPU - the Central Processing Unit The CPU is often called the brain of the computer. It performs and orchestrates computational tasks. Modern computers often perform multiple tasks at once, ranging from 4 tasks on a typical laptop. In addition to the main CPU, computers may be equipped with specialized processors called GPUs which stands for graphics processing units that can perform over 5,000 simpler tasks at once! Memory or RAM - short-term memory RAM stands for Random Access Memory. It is often simply referred to as memory. This short-term memory holds the information that the CPU needs to perform calculations. Since CPUs are fast, RAM needs to be fast, making it relatively expensive. One distinctive feature of memory is that it is temporary. When the electricity is shut off, the data stored in RAM disappears. Storage - long-term memory Storage is also sometimes referred to as long-term memory because electricity is not required to preserve the data. This type of memory is stored using hard disk drives (HDD) also called hard drives or more recently solid-state drives (SSD). Typically ranging from gigabytes to terabytes or more, this type of storage offers big data capacity for a relatively low price at the cost of speed. 4.1.2 Current Computer Capacity So how many tasks can the CPU of an average computer do these days? How much memory and storage do they typically have? These values will probably change very soon, but currently: Laptops can perform 8 CPU tasks at once, storing 64 GB in memory and 8 TB on storage. Handheld tablets can now perform 8 CPU tasks, and store 6 GB in memory and 1 TB on storage. Some phones can compete with laptops from the not so distant past by performing 6 CPU tasks at once and storing 4 GB in memory and 0.5 TB on storage. 4.1.3 Servers What if we need to more computational power than our laptop? You may encounter times where certain informatics tasks take way too long or are not even possible on your personal computer. In terms of hardware, the term server means a computer or computers that can be accessed through a direct local network or the internet to perform computations or store data. Read here to learn more. For example, your lab members could connect to a server from their own computers to allow each of them more computational power. Typically computers that act as servers are set up a bit differently than our personal computers, as they do not need the same functionality. For instance they often don’t have capabilities to support a graphical interface (more on what that is later). They are designed to optimize data storage and computational power. 4.2 Computing Platforms Now that we have discussed a bit about how computers perform computations, lets discuss more about how you might choose your computing platform. A computing platform, is all the hardware (the physical parts of your computing platform) and software (the code that tells the computing platform how to function) necessary to create the environment in which you can perform your computational work. Choosing a computing platform involves both software and hardware decisions. We will focus on hardware. 4.3 Hardware With regards to hardware, there are two major options: Personal computers Shared computers 4.3.1 Personal computers These are computers that your lab might own, such as a laptop, a desktop, or a small server used by just your lab. If you are not performing intensive computational tasks, it is possible that you will only need personal computers for your lab. However, you may find that this changes, and you might require connecting your personal computers to shared computers for more computational power and or storage. Note that you could technically purchase your own server. However, this is very likely not as economical, feasible (as having your own server would require that you personally maintain it), or scalable (you might outgrow your server) as other computing options that we will discuss in a bit. https://profs.info.uaic.ro/~adria/teach/courses/pcdfeaa/resources/C5_PCD_FEEA_ClusterGridComputing_en.pdf 4.3.2 Shared Computers These are servers (groups of computers) that are shared with other people that you can connect to from your computer (typically using the internet) to help you perform more intensive computational tasks or to store large amounts of data. Among shared computers there are three major options: Clusters - institutional or national resources Grids - institutional or national resources “Cloud” - commercial or national resources AVOCADO - maybe put the image here for shared computers - check how anvil images were added within lists Computer Cluster In a computing cluster several of the same type of computer (often in close proximity and connected by a local area network rather than the internet) work together to perform pieces of the same single task simultaneously. The idea of performing multiple computations simultaneously is called parallel computing. There are different designs or architectures for clusters. One common one is the Beowulf cluster in which a master computer (called front node or server node) breaks a task up into small pieces that the other computers (called client nodes or simply nodes) perform. For example, if a large file needs to be converted to a different format, pieces of the file will be converted simultaneously by the different nodes. Thus each node is performing the same task just with different pieces of the file. The user has to write code in a special way to specify that they want parallel processing to be used and how. It is important to realize that the CPUs in each of the node computers connected within a cluster are all performing a similar task simultaneously. See here for more information. Computer Grid In a computing grid different types of computers (often in different locations) work towards an overall common goal by performing different tasks. The concept for grid computing is similar to that of an electric power grid, where only computers (nodes) actively performing a task are using resources at any given time. Again, just like computer clusters, there are many types of architectures that can be rather simple to very complex. For example you can think of different universities collaborating to perform different computations for the same project. One university might perform computations using gene expression data about a particular population, while another performs computations using data from another population. Importantly each of these universities might use clusters to perform their specific task. Both grids and clusters use a special type of software called middleware to coordinate the various computers involved. Users need to write their scripts in a way that can be performed by multiple computers simultaneously. Users also need to be conscious of how to schedule their tasks and to follow the rules and etiquette of the specific cluster or grid that they are sharing. See here for more information about the difference between clusters and grids. AVOCADO maybe add as a reference https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&amp;arnumber=1300502 “Cloud” computing] https://go.cloudhealthtech.com/eb-simplify-the-journey-data-center-to-public-cloud.html https://www.geeksforgeeks.org/difference-between-grid-computing-and-cluster-computing/ More recently, commercial “Cloud” solutions are becoming a more viable hardware solution, offered by companies like Amazon, Google, and Microsoft. This option is technically also a shared computer situation. Somewhere these companies have clusters of computers that paying customers use through the internet. In addition there are options like Jetstream which is a more “Cloud-like” part of Xsede. AVOCADO need a new shared computer image 4.3.3 Accessing Shared Computer Resources All of the shared computing options that already exist and that you could utilize involve a data center where are large number of computers are physically housed. Photo by Taylor Vick on Unsplash You may have access to a HPC (which stands for High Performance Computing) cluster at your institute. Or you could consider using national resources like Xsede. Your university or institution may have a HPC cluster, this means that they have a group of computers acting like servers that people can use to store data or assist with intensive computations. Often institutions can support the cost of many computers within an HPC cluster, allowing for what is called parallel computing. This means that multiple computers will simultaneously perform different parts of the computing required for a given task, thus significantly speeding up the process compared to you trying to perform the task on just your computer! This is also a much more cost effective option than having one expensive supercomputer (a computer that individually has the computational power of many personal computers) to act as a server. It turns out that buying several less powerful computers is cheaper. AVOCADO - update image below to say cluster and grid access Alternatively, you could consider an option like Xsede. Xsede is led by the University of Illinois National Center for Supercomputing Applications (NCSA) and includes 18 other partnering institutions (which are mostly other universities). Through this partnership, they currently support 16 supercomputers. Universities and non-profit researchers in the United States can request access to their computational and data storage resources. Here you can see a photo of Stampede2, one of the supercomputers that members of Xsede can utilize. [source] Stampede2, generously funded by the National Science Foundation (NSF) through award ACI-1134872, is one of the Texas Advanced Computing Center (TACC), University of Texas at Austin’s flagship supercomputers. See here for more information about how you could possibly connect to and utilize Stampede2. Importantly when you use shared computers like national resources like Stampede2 available through Xsede, as well as institutional HPC clusters, you will share these resources with many other people and so you need to learn the proper etiquette for using and sharing these resources. These will vary by the shared resource, however in general: Don’t use all nodes if you don’t need to Don’t use all RAM on a node if you don’t need to Communicate with others if you will be submitting a large or intensive job 4.3.4 Cloud Computing https://go.cloudhealthtech.com/eb-simplify-the-journey-data-center-to-public-cloud.html https://www.geeksforgeeks.org/difference-between-grid-computing-and-cluster-computing/ More recently, commercial “Cloud” solutions are becoming a more viable hardware solution, offered by companies like Amazon, Google, and Microsoft. This option is technically also a shared computer situation. Somewhere these companies have clusters of computers that paying customers use through the internet. In addition there are options like Jetstream which is a more “Cloud-like” part of Xsede. What is the difference between the “Cloud” and other shared computer options? 4.4 Choosing a Computing Platform Choosing a computing platform depends on many different considerations. 4.4.1 Important questions Asking yourself and your research team these questions can help you find the right computing platform: Do I need a graphical interface, a command line interface, or both? What do we mean by this? A graphical interface or graphical user interface or GUI, allows for users to choose functions to perform by interacting with visual representations. They have a “user-centered” design that creates a visual environment where users can for example click on tabs, boxes, or icons for to perform functions. Galaxy offers a graphical interface for performing analyses and tasks. For example in the following image we show a GUI for joining two files: A command line interface (also known as a character interface) allows for software functions to be performed by specifying through commands written in text. This typically offers more control than a graphical interface, however command line interfaces are often less user friendly as they require that the user know the correct commands to use. For example, one could perform functions in R using Bioconductor packages such as Biostrings with a command line interface: A situation where you might use both a command line interface and a GUI, is using RStudio to perform an analysis in R with Bioconductor packages. RStudio is what is called an IDE or an integrated development enviornment, which is an application that supports writing code. There are many tools to help you including a console for writing code in R with command line interfacing, as well as graphical interface tools. As shown in this example below, one can inspect and save a plot (that was created with the command line) by using a GUI. 2) Am I working with protected data that requires special security precautions? If you are working with data that might be protected by HIPAA, such as electronic health records, then special security measures are required to ensure that only authorized users have access to the data. [source] How computationally intensive are my tasks? If you have a large amount of data and/or are performing complex analyses, you may require more computational power than your current laptop can provide. If this is the case, you might consider using a local server or what is called “Cloud” computing (more on that later). How much storage space do I need for both temporary and long-term data? If you are working with large datasets you may also need storage options that go beyond what you currently have available. Local or “Cloud” storage options may work for you, depending on other considerations (security, data transfers) that we will discuss further. Avocado - I want to modify this to highlight the difference between cloud computing by companies vs Xsede Are my local resources sufficient? When a local solution already works, one may rightly question the time required to migrate to the Cloud. However, when local solutions are insufficient or unsustainable, then the Cloud becomes a competitive option. Am I working with especially big or controlled access datasets? Increasingly large datasets like the NCBI Sequence Read Archive are being stored on the Cloud. If your work relies on being able to access the entire dataset, then the Cloud may be your only practical option. Furthermore, if you work with controlled access data, then more platforms are providing compliance with regulations like HIPPA and FedRAMP. Do I need to work with collaborators? Computational research increasingly involves larger and larger collaborations. While many fragmented systems exist to share work, the Cloud presents an opportunity for everyone to share the exact same computational environment including hardware, software, and datasets. If Cloud Computing makes sense for you, then you’re in luck! The past decade has seen the development of many efforts to make Cloud computing, easier, faster, and more affordable. As each platform has their strengths and weaknesses, we will now discuss several opportunities and challenges that Cloud computing presents in the field of computational genomics. 4.4.2 Benefits of Cloud Computing The state of Cloud computing is continually evolving. Here, we highlight three main current benefits: https://jetstream-cloud.org/files/Jetstream-Outreach-C2Exchange-Sep2019.pdf Sharing Workflows The first major benefit is the increasing ease with which one can share and collaborate on research projects. Shown here is the History feature of Galaxy. Using this, one can share not only what datasets they used but also every computational manipulation that was performed. By sharing such a history, one can reproduce an analysis in its entirety, allowing collaborators to offer comments and extend upon the work with ease. Sharing Workflows between Platforms While sharing complete analysis histories is for the most part constrained to a particular software platform, a second benefit that has arisen is the ability to share Workflows between platforms. Shown here is a diagram of a single cell analysis pipeline published by the Klarman Cell Observatory on Dockstore: This higher level abstraction coupled with container technology allows this multistep analysis to be run with relative ease on supporting platforms like Terra or DNAnexus. Using Commodity Hardware The third Benefit we highlight is the increasing ease by which one can provision commodity hardware at scale. What this means is that you can pay reasonable costs to complete your analysis in less time by renting hundreds to tens of thousands of Cloud-based computers – importantly stopping the bill when your analysis is complete. Specialized hardware like GPUs and large memory nodes are also available for rent allowing you to pay only for what you need. 4.4.3 Challenges of Cloud Computing Balancing these three benefits are four challenges: Data Transfer Data transfer and data management remains a cumbersome task. While storing data in the “Cloud” has its advantages, it also has corresponding storage costs. Thus, careful planning is necessary with regards to what data will be stored where, as well as budgeting the time necessary to transfer data back and forth. Data Security Most Cloud resources offer features that make it easier to access and share data, and these features often come at the expense of security. Thus, special precautions must be implemented to securely store protected datasets such as human genome sequences and electronic health records. Costs Controlling costs, especially with regards to storage, presents a third formidable challenge. As many Cloud providers naturally want to encourage usage of their platforms, users must be aware of how much money is currently being spent and be able to project how much money is likely to be spent in the future. We will briefly overview cost controls in the next section. While software platforms can help mitigate these challenges, Cloud computing still incurs costs from the underlying hardware providers. IT A final challenge is that many IT support staff do not have extensive experience managing Cloud resources. Should IT choose to support analysis on the Cloud, they would face the aforementioned challenges of understanding and supporting data management, security compliance, and cost management. Fortunately, large initiatives like AnVIL, Galaxy, and CyVerse continue to work on democratizing access to Cloud computing by tackling many of these challenges. 4.5 Local Costs 4.6 Cloud Costs "],["data-management-for-cancer-research.html", "Chapter 5 Data Management for Cancer Research 5.1 Good Practice 5.2 Data Security 5.3 Data Privacy 5.4 Data REproducibility", " Chapter 5 Data Management for Cancer Research 5.1 Good Practice 5.2 Data Security 5.3 Data Privacy 5.4 Data REproducibility 5.4.1 NIH Data Sharing Policies Starting in January, 2023 the NIH will require specific sharing practices for data management and sharing. See the announcement here. "],["about-the-authors.html", "About the Authors", " About the Authors Carrie Wright is a Research Associate in the Department of Biostatistics at the Johns Hopkins Bloomberg School of Public Health. Prior to joining the Johns Hopkins Data Science Lab (https://jhudatascience.org/), Dr. Wright was a Postdoctoral Fellow at the Lieber Institute for Brain Development (LIBD), where her research focused on uncovering genetic mechanisms in psychiatric disease through the utilization of data science tools. At LIBD, she cofounded the LIBD rstats club, a community designed to encourage others to learn more about R programming and statistics. Dr. Wright has also served as an instructor for the Baltimore Underground Science Space and the Johns Hopkins Center for Talented Youth, covering topics such as biomedicine, the microbiome, and data science. Dr. Wright is also a faculty member of the Open Case Studies Project which features over 10 public health data analysis guides and she co-authored a coursera specialization and leanpub book entitled “Tidyverse Skills for Data Science in R”. "]]
